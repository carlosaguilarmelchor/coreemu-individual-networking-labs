<?xml version='1.0' encoding='UTF-8'?>
<scenario name="/tmp/tmpgu9yksyj">
  <networks>
    <network id="1" name="hsvlan_hsplaceholder_usernumber" icon="" type="RJ45">
      <position x="667.0" y="445.0" lat="47.57512135755798" lon="-122.12333657433237" alt="2.0"/>
    </network>
    <network id="4" name="hub" icon="" type="HUB">
      <position x="528.0" y="215.0" lat="47.57721209905449" lon="-122.12520956169975" alt="2.0"/>
    </network>
  </networks>
  <devices>
    <device id="2" name="firewall" icon="" type="PC" class="" image="">
      <position x="346.0" y="445.0" lat="47.57512135755798" lon="-122.1276619624254" alt="2.0"/>
      <services>
        <service name="Firewall"/>
        <service name="IPForward"/>
      </services>
    </device>
    <device id="3" name="attacker_hsplaceholder_usernumber" icon="" type="" class="docker" image="coreemu-attacker">
      <position x="346.0" y="216.0" lat="47.57720300905476" lon="-122.1276619624254" alt="2.0"/>
      <services>
        <service name="DefaultRoute"/>
        <service name="StaticRoute"/>
      </services>
    </device>
    <device id="5" name="client" icon="" type="PC" class="" image="">
      <position x="769.0" y="86.0" lat="47.57838469578746" lon="-122.12196215194766" alt="2.0"/>
      <services>
        <service name="DefaultRoute"/>
      </services>
      <configservices>
        <service name="StaticRoute"/>
      </configservices>
    </device>
    <device id="6" name="server" icon="" type="host" class="" image="">
      <position x="771.0" y="215.0" lat="47.57721209905449" lon="-122.12193520248913" alt="2.0"/>
      <services>
        <service name="FTP"/>
      </services>
    </device>
  </devices>
  <links>
    <link node1="4" node2="3">
      <iface2 id="1" name="eth1" mac="00:00:00:aa:00:00" ip4="254.147.2.20" ip4_mask="24"/>
      <options delay="0" bandwidth="0" loss="0.0" dup="0" jitter="0" unidirectional="0"/>
    </link>
    <link node1="4" node2="5">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:01" ip4="254.147.2.21" ip4_mask="24"/>
      <options delay="0" bandwidth="0" loss="0.0" dup="0" jitter="0" unidirectional="0"/>
    </link>
    <link node1="4" node2="6">
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:02" ip4="254.147.2.22" ip4_mask="24"/>
      <options delay="0" bandwidth="0" loss="0.0" dup="0" jitter="0" unidirectional="0"/>
    </link>
    <link node1="2" node2="1">
      <iface1 id="0" name="eth0" mac="00:00:00:aa:00:03" ip4="254.147.0.1" ip4_mask="24"/>
      <iface2 id="0" name="hsvlan_hsplaceholder_usernumber"/>
      <options delay="0" bandwidth="0" loss="0.0" dup="0" jitter="0" unidirectional="0"/>
    </link>
    <link node1="2" node2="3">
      <iface1 id="1" name="eth1" mac="00:00:00:aa:00:05" ip4="254.147.1.1" ip4_mask="24"/>
      <iface2 id="0" name="eth0" mac="00:00:00:aa:00:06" ip4="254.147.1.21" ip4_mask="24"/>
      <options delay="0" bandwidth="0" loss="0.0" dup="0" jitter="0" unidirectional="0"/>
    </link>
  </links>
  <emane_global_configuration>
    <emulator/>
    <core>
      <configuration name="platform_id_start" value="1"/>
      <configuration name="nem_id_start" value="1"/>
      <configuration name="link_enabled" value="1"/>
      <configuration name="loss_threshold" value="30"/>
      <configuration name="link_interval" value="1"/>
      <configuration name="link_timeout" value="4"/>
    </core>
  </emane_global_configuration>
  <service_configurations>
    <service name="Firewall" node="2">
      <startups>
        <startup>bash firewall.sh</startup>
      </startups>
      <files>
        <file name="firewall.sh"><![CDATA[#!/bin/sh
# custom node firewall rules for service (security.py)
iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -d 254.147.1.21 -p tcp --dport 22 -m conntrack --ctstate NEW -j ACCEPT
iptables -A INPUT -j DROP
iptables -A FORWARD -j DROP

]]></file>
      </files>
    </service>
    <service name="UserDefined" node="3">
      <startups>
        <startup>/usr/bin/bash user_setup.sh</startup>
        <startup>/usr/sbin/dropbear</startup>
      </startups>
    </service>
    <service name="StaticRoute" node="3">
      <startups>
        <startup>bash staticroute.sh</startup>
      </startups>
      <files>
        <file name="staticroute.sh"><![CDATA[#!/bin/sh
# auto-generated by StaticRoute service (utility.py)
#
# NOTE: this service must be customized to be of any use
#       Below are samples that you can uncomment and edit.
#
#/sbin/ip route add 10.9.8.0/24 via 254.147.1.1
/sbin/ip route add 254.147.0.0/24 via 254.147.1.1

]]></file>
      </files>
    </service>
    <service name="DefaultRoute" node="3">
      <startups>
        <startup>bash defaultroute.sh</startup>
      </startups>
      <files>
        <file name="defaultroute.sh"><![CDATA[#!/bin/bash
# Using this file to create and execute other files as file creation does not 
# work on core-pygui yet

# file: user_setup.sh
usermod -p 'hsplaceholder_pwd' root
/usr/sbin/dropbear

]]></file>
      </files>
    </service>
    <service name="UserDefined" node="5">
      <startups>
        <startup>/usr/bin/bash ./loop_ftp_access.sh</startup>
      </startups>
    </service>
    <service name="DefaultRoute" node="5">
      <startups>
        <startup>bash defaultroute.sh</startup>
      </startups>
      <files>
        <file name="defaultroute.sh"><![CDATA[#!/bin/bash
# Using defaultreoute.sh for UserDefined services until they work in core-pygui
# file: loop_ftp_access.sh
while true
  do wget ftp://anonymous@254.147.2.22/flag.txt
  sleep 5
done


]]></file>
      </files>
    </service>
    <service name="FTP" node="6">
      <directories>
        <directory>/var/run/vsftpd/empty</directory>
        <directory>/var/ftp</directory>
      </directories>
      <startups>
        <startup>/usr/bin/bash ./vsftpd.conf</startup>
      </startups>
      <validates>
        <validate>pidof vsftpd</validate>
      </validates>
      <shutdowns>
        <shutdown>killall vsftpd</shutdown>
      </shutdowns>
      <files>
        <file name="vsftpd.conf"><![CDATA[#!/bin/bash
# Using this file to create and execute other files as file creation does not 
# work on core-pygui yet

# file: vsftpd.conf
echo "# vsftpd.conf auto-generated by FTP service (utility.py)
listen=YES
anonymous_enable=YES
local_enable=YES
dirmessage_enable=YES
use_localtime=YES
xferlog_enable=YES
connect_from_port_20=YES
xferlog_file=/var/log/vsftpd.log
ftpd_banner=Welcome to the CORE FTP service
secure_chroot_dir=/var/run/vsftpd/empty
anon_root=/var/run/vsftpd/empty" > vsftpd.tmp.conf

# file: flag.txt
echo "FLAG{ThisIsAPlaceholder}" > flag.txt

# file: vsftpd_setup.sh
cp flag.txt /var/run/vsftpd/empty
chmod o-wr /var/run/vsftpd/
chmod o-w /var/run/vsftpd/empty
vsftpd ./vsftpd.tmp.conf



]]></file>
      </files>
    </service>
  </service_configurations>
  <configservice_configurations>
    <service name="StaticRoute" node="5"/>
  </configservice_configurations>
  <session_origin lat="47.579166412353516" lon="-122.13232421875" alt="2.0" scale="150.0"/>
  <session_options>
    <configuration name="controlnet" value=""/>
    <configuration name="controlnet0" value=""/>
    <configuration name="controlnet1" value=""/>
    <configuration name="controlnet2" value=""/>
    <configuration name="controlnet3" value=""/>
    <configuration name="controlnet_updown_script" value=""/>
    <configuration name="enablerj45" value="1"/>
    <configuration name="preservedir" value="0"/>
    <configuration name="enablesdt" value="0"/>
    <configuration name="sdturl" value="tcp://127.0.0.1:50000/"/>
    <configuration name="ovs" value="0"/>
  </session_options>
  <session_metadata>
    <configuration name="canvas" value="{&quot;wallpaper&quot;: null, &quot;wallpaper-style&quot;: 1, &quot;gridlines&quot;: true, &quot;fit_image&quot;: false, &quot;dimensions&quot;: [1000, 750]}"/>
    <configuration name="shapes" value="[]"/>
  </session_metadata>
  <default_services>
    <node type="mdr">
      <service name="zebra"/>
      <service name="OSPFv3MDR"/>
      <service name="IPForward"/>
    </node>
    <node type="PC">
      <service name="DefaultRoute"/>
    </node>
    <node type="prouter"/>
    <node type="router">
      <service name="zebra"/>
      <service name="OSPFv2"/>
      <service name="OSPFv3"/>
      <service name="IPForward"/>
    </node>
    <node type="host">
      <service name="DefaultRoute"/>
      <service name="SSH"/>
    </node>
  </default_services>
</scenario>
